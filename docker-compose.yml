name: chat-app
version: '1.0'

services:
  # PostgreSQL Database (deine bestehende Config)
  postgres:
    image: postgres:15
    container_name: chatapp-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PW}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - chatapp-network
    restart: unless-stopped

  # .NET Backend API
  chatserver:
    build:
      context: ./chatserver
      dockerfile: Dockerfile
    container_name: chatapp-backend
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      # ✅ Verwende deine bestehenden .env Variablen
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PW=${POSTGRES_PW}
      - POSTGRES_DB=${POSTGRES_DB}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_ISSUER=${JWT_ISSUER}
      - JWT_AUDIENCE=${JWT_AUDIENCE}
      - JWT_EXPIRY_HOURS=${JWT_EXPIRY_HOURS}
      # ✅ Für Docker: DB Host ist der Service Name
      - DB_HOST=postgres
      - DB_PORT=5432
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - chatapp-network
    restart: unless-stopped

  # Frontend UI
  chat-ui:
    build:
      context: ./chat-ui
      dockerfile: Dockerfile
    container_name: chatapp-frontend
    ports:
      - "3000:80"
    depends_on:
      - chatserver
    networks:
      - chatapp-network
    restart: unless-stopped

  # pgAdmin (deine bestehende Config)
  pgadmin:
    image: dpage/pgadmin4
    container_name: chatapp-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_MAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PW}
    ports:
      - "8081:80"
    depends_on:
      - postgres
    networks:
      - chatapp-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  chatapp-network:
    driver: bridge